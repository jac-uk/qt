jobs:
  deploy_to_develop:
    runs-on: ubuntu-latest
    environment:
      name: develop
    env:
      environment: develop
    steps:
      - uses: actions/checkout@v2

      # Cache node modules
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Setup node environment
      - uses: actions/setup-node@master
        with:
          node-version: '20.10.0'

      # Installing project dependencies
      - name: Installing project dependencies
        run: |
          cd /qt && echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc && npm ci

      # Create env file
      - name: Create env file
        run: |
          cd /qt
          touch .env.${{ env.environment }}
          echo "VITE_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env.${{ env.environment }}
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env.${{ env.environment }}
          echo "VITE_FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}" >> .env.${{ env.environment }}
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env.${{ env.environment }}
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env.${{ env.environment }}
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env.${{ env.environment }}
          echo "VITE_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env.${{ env.environment }}
          echo "VITE_RECAPTCHA_TOKEN=${{ secrets.RECAPTCHA_TOKEN }}" >> .env.${{ env.environment }}
          cat .env.${{ env.environment }}

      # Add checks for develop-qt-app in Firebase config
      - name: Check if develop-qt-app is in firebase.json and .firebaserc
        run: |
          cd /qt
          echo "Is develop-qt-app in firebase.json?"
          grep -q '"develop-qt-app"' firebase.json && echo "Found develop-qt-app in firebase.json" || echo "develop-qt-app not found in firebase.json"
          
          echo "Is develop-qt-app in .firebaserc?"
          grep -q '"develop-qt-app"' .firebaserc && echo "Found develop-qt-app in .firebaserc" || echo "develop-qt-app not found in .firebaserc"

      # Building the project
      - name: Building the project
        run: |
          cd /qt && npm run ${{ env.environment }}:build && cd ../

      # Deploy to Firebase
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          target: '${{ env.environment }}-qt-app'
          channelId: live
