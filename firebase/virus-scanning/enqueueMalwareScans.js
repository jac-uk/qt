// /*
// * Based on original work as licensed by:
// * Copyright 2019 Google LLC

// * Licensed under the Apache License, Version 2.0 (the "License");
// * you may not use this file except in compliance with the License.
// * You may obtain a copy of the License at

// *     https://www.apache.org/licenses/LICENSE-2.0

// * Unless required by applicable law or agreed to in writing, software
// * distributed under the License is distributed on an "AS IS" BASIS,
// * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// * See the License for the specific language governing permissions and
// * limitations under the License.
// */
// const {CloudTasksClient} = require('@google-cloud/tasks');
// const {Storage} = require('@google-cloud/storage');

// const storage = new Storage();
// const client = new CloudTasksClient();
// // const request = require('request-promise');

// // // @TODO: move to env vars
// // const project = '317241901771';
// // const queue = 'virus-scan-queue';
// // const location = 'eu-west2';

// /**
// * Background Cloud Function that handles the 'google.storage.object.finalize'
// * event. It invokes the Malware Scanner service running in App Engine Flex
// * requesting a scan for the uploaded document.
// *
// * @param {object} data The event payload.
// * @param {object} context The event metadata.
// */
// exports.enqueueMalwareScans = async (data, context) => {

//   const [files] = await storage.bucket(bucketName).getFiles();

//   console.log(`Scanning ${files.length} files`);

//   files.forEach(async file => {
//     const task = {
//       appEngineHttpRequest: {
//         method: 'POST',
//         relativeUri: process.env.SCAN_SERVICE_URI,
//         body: {
//           location: `gs://${file.bucket}/${file.name}`,
//           filename: file.name,
//           bucketname: file.bucket,
//         },
//       },
//     };

//     const request = {
//       parent: parent,
//       task: task,
//     };

//     try {
//       const [response] = await client.createTask(request);
//       console.log(`Enqueue scan succeeded for: ${file.name} as ${response.name}`);
//     } catch(e) {
//       console.error(`Error occurred while enqueuing ${file.name}`, e);
//     }

//   });
// };
